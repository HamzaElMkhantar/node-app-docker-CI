version: "3"
services:
  compose-node-app:
    image: hamzaelmkhantar/node-app
    # platform: linux/amd64  
    # container_name: node-app-container // we remove that to scale container to multiple instances, 2, 3 or more containers of this app !
    # ports:
    #   - "4000:4000"
    env_file:
      - ./.env
    deploy:
      replicas: 4
      # placement:
      #   max_replicas_per_node: 1 // we already have 1 node work as manager and worker node 
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
    depends_on:
      # - postgres
      - redis
      - mongo

  mongo:
    image: mongo
    # platform: linux/amd64  
    restart: always
    # ports:
    #   - 27017:27017
    volumes:
      - mongo-db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  # postgres:
  #   image: postgres
  #   restart: always
  #   volumes:
  #     - postgres-db:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_USER: root
  #     POSTGRES_PASSWORD: example


  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #     ME_CONFIG_BASICAUTH: false
    # depends_on:
      # - mongo

  redis:
    image: redis
    # platform: linux/amd64
    depends_on:
      - mongo

  nginx:
    image: nginx:stable-alpine
    # platform: linux/amd64
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - compose-node-app


volumes:
  mongo-db:
  postgres-db: